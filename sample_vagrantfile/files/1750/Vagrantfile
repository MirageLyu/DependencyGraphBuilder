# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box = "ubuntu/xenial64"
  
  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  # config.vm.network :hostonly, "192.168.33.10"

  # Assign this VM to a bridged network, allowing you to connect directly to a
  # network using the host's network device. This makes the VM appear as another
  # physical device on your network.
  # config.vm.network :bridged

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  config.vm.network "forwarded_port", guest: 443, host:8000
  config.vm.network "forwarded_port", guest: 80, host:9001
  config.vm.network "forwarded_port", guest:8000, host:9002
  config.vm.network "forwarded_port", guest:8080, host:9003
  config.vm.network "forwarded_port", guest:9000, host:9004
  config.vm.network "forwarded_port", guest:9200, host:9200
  config.vm.network "forwarded_port", guest:9201, host:9201
  config.vm.network "forwarded_port", guest:5555, host:5555
  config.vm.network "forwarded_port", guest:5556, host:5556

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  config.vm.synced_folder "../..", "/home/ubuntu/courses", 
      id: "vagrant-root", 
      owner: "ubuntu",
      group: "www-data",
      mount_options: ["dmode=777,fmode=777"]

  config.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", "4096"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
      v.customize ["modifyvm", :id, "--uartmode1", "disconnected"] # speed up boot https://bugs.launchpad.net/cloud-images/+bug/1627844
  end

  # Enable provisioning with chef solo, specifying a cookbooks path, roles
  # path, and data_bags path (all relative to this Vagrantfile), and adding 
  # some recipes and/or roles.
  #
  config.vm.provision :chef_solo do |chef|
     chef.cookbooks_path = "../chef/cookbooks"
     chef.add_recipe "apt"
     chef.add_recipe "coursys"
     chef.add_recipe "coursys_deployed"
     #only for prod-dev, not for production
     chef.add_recipe "coursys_proddev"
     #chef.add_recipe "coursys_true_production"
     chef.version = "14.12.9"

     chef.add_recipe "sfu-db2"

  #   # You may also specify custom JSON attributes:
     chef.json = { :sfu_db2 => { :users => ['coursys', 'ubuntu']} }
  end

end
